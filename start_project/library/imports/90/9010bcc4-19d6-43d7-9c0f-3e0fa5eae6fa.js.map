{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","game","default","serializable","onLoad","getPlayerDistance","playerPos","player","getPosition","dist","pDistance","node","position","onPicked","spawnNewStar","destroy","update","dt","gainScore","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH;AACIC,aAASF,GAAGG,SADhB;;AAGIC,gBAAY;AACR;AACA;AACAC,oBAAY,CAHJ;AAIR;AACAC,cAAM;AACFC,qBAAS,IADP;AAEFC,0BAAc;AAErB;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBM,SALE,EAHhB;AA0BIC,UA1BJ,oBA0Bc,CAAE,CA1BhB;;AA2BIC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKL,IAAL,CAAUM,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAOd,GAAGe,SAAH,CAAa,KAAKC,IAAL,CAAUC,QAAvB,EAAiCN,SAAjC,CAAX;AACA,eAAOG,IAAP;AACH,KAjCL;;AAmCII,cAAU,oBAAW;AACjB;AACA,aAAKZ,IAAL,CAAUa,YAAV;AACA;AACA,aAAKH,IAAL,CAAUI,OAAV;AACH,KAxCL;AAyCIC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKZ,iBAAL,KAA2B,KAAKL,UAApC,EAAgD;AAC5C;AACA,iBAAKa,QAAL;AACA;AACH;AAEJ;;AAjDL,0CAmDc,oBAAW;AACjB;AACA,SAAKZ,IAAL,CAAUa,YAAV;AACA;AACA,SAAKb,IAAL,CAAUiB,SAAV;AACA;AACA,SAAKP,IAAL,CAAUI,OAAV;AACH,CA1DL,wCA4DY,kBAAW;AACf;AACA;AACA,QAAII,eAAe,IAAI,KAAKlB,IAAL,CAAUmB,KAAV,GAAgB,KAAKnB,IAAL,CAAUoB,YAAjD;AACA,QAAIC,aAAa,EAAjB;AACA,SAAKX,IAAL,CAAUY,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACH,CAlEL,wDAqEa,CAER,CAvEL","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        pickRadius: 0,\r\n        // 暂存 Game 对象的引用\r\n        game: {\r\n            default: null,\r\n            serializable: false\r\n        }\r\n     //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    onLoad () {},\r\n    getPlayerDistance: function () {\r\n        // 根据 player 节点位置判断距离\r\n        var playerPos = this.game.player.getPosition();\r\n        // 根据两点位置计算两点之间距离\r\n        var dist = cc.pDistance(this.node.position, playerPos);\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function() {\r\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        // 然后销毁当前星星节点\r\n        this.node.destroy();\r\n    },\r\n    update: function (dt) {\r\n        // 每帧判断和主角之间的距离是否小于收集距离\r\n        if (this.getPlayerDistance() < this.pickRadius) {\r\n            // 调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n        \r\n    },\r\n    \r\n    onPicked: function() {\r\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        // 调用 Game 脚本的得分方法\r\n        this.game.gainScore();\r\n        // 然后销毁当前星星节点\r\n        this.node.destroy();\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    update: function() {\r\n        // ...\r\n        // 根据 Game 脚本中的计时器更新星星的透明度\r\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n    },\r\n    \r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}