{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","onLoad","groundY","y","height","spawnNewStar","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","randX","randY","random0To1","jumpHeight","maxX","width","randomMinus1To1","p","scoreDisplay","Label","score","timer","starDuration","dt","gameOver","stopAllActions","director","loadScene","string","toString"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH;AACIC,aAASF,GAAGG,SADhB;;AAGIC,gBAAY;AACR;AACA;AACA;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAJJ;AAQR;AACAC,yBAAiB,CATT;AAURC,yBAAiB,CAVT;AAWR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAZA;AAgBR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY,IAFL,CAGP;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdQ,SAjBA,EAHhB;;AAqCI;;AAEAE,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKJ,MAAL,CAAYK,CAAZ,GAAgB,KAAKL,MAAL,CAAYM,MAAZ,GAAmB,CAAlD;AACA;AACA,aAAKC,YAAL;AACH,KA5CL;;AA8CIA,kBAAc,wBAAW;AACrB;AACA,YAAIC,UAAUnB,GAAGoB,WAAH,CAAe,KAAKf,UAApB,CAAd;AACA;AACA,aAAKgB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACH,KAtDL;;AAwDIF,wBAAoB,8BAAY;AAC5B,YAAIG,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKb,OAAL,GAAef,GAAG6B,UAAH,KAAkB,KAAKhB,MAAL,CAAYY,YAAZ,CAAyB,QAAzB,EAAmCK,UAApE,GAAiF,EAA7F;AACA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAgB,CAA3B;AACAL,gBAAQ3B,GAAGiC,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAO/B,GAAGkC,CAAH,CAAKP,KAAL,EAAYC,KAAZ,CAAP,CAR4B,CAQF;AAC7B;AAjEL,4CAkEgB;AACR;AACA;AACAO,kBAAc;AACV7B,iBAAS,IADC;AAEVC,cAAMP,GAAGoC;AAFC;AAHN,CAlEhB,wCA0EY,kBAAY;AAChB;AACA;AACA,SAAKC,KAAL,GAAa,CAAb;AACH,CA9EL,wCA+EY,kBAAY;AAChB;AACA;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA;AACA,SAAKrB,YAAL;AACA;AACA,SAAKmB,KAAL,GAAa,CAAb;AACH,CAxFL,8CAyFkB,wBAAW;AACrB;AACA;AACA,SAAKE,YAAL,GAAoB,KAAK7B,eAAL,GAAuBV,GAAG6B,UAAH,MAAmB,KAAKpB,eAAL,GAAuB,KAAKC,eAA/C,CAA3C;AACA,SAAK4B,KAAL,GAAa,CAAb;AACH,CA9FL,wCA+FY,gBAAUE,EAAV,EAAc;AAClB;AACA;AACA,QAAI,KAAKF,KAAL,GAAa,KAAKC,YAAtB,EAAoC;AAChC,aAAKE,QAAL;AACA;AACH;AACD,SAAKH,KAAL,IAAcE,EAAd;AACH,CAvGL,0CAwGc,oBAAY;AAClB,SAAK3B,MAAL,CAAY6B,cAAZ,GADkB,CACY;AAC9B1C,OAAG2C,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH,CA3GL,wDA4Ga,CAER,CA9GL,2CAiHe,qBAAY;AACnB,SAAKP,KAAL,IAAc,CAAd;AACA;AACA,SAAKF,YAAL,CAAkBU,MAAlB,GAA2B,YAAY,KAAKR,KAAL,CAAWS,QAAX,EAAvC;AACH,CArHL","file":"game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        }//                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n    },\r\n\r\n    spawnNewStar: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        newStar.getComponent('Star').game = this;\r\n    },\r\n\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        // 返回星星坐标\r\n        return cc.p(randX, randY);// onLoad () {},\r\n    },\r\n    properties: {\r\n        // ...\r\n        // score label 的引用\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        }\r\n    },\r\n    onLoad: function () {\r\n        // ...\r\n        // 初始化计分\r\n        this.score = 0;\r\n    },\r\n    onLoad: function () {\r\n        // ...\r\n        // 初始化计时器\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n        // 初始化计分\r\n        this.score = 0;\r\n    },\r\n    spawnNewStar: function() {\r\n        // ...\r\n        // 重置计时器，根据消失时间范围随机取一个值\r\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n    update: function (dt) {\r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n    gameOver: function () {\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n        cc.director.loadScene('game');\r\n    },\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n    },\r\n});\r\n"]}